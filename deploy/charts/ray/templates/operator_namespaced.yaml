{{- if and (.Values.namespacedOperator) (not .Values.clusterOnly) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ray-operator-serviceaccount
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ray-operator-role
rules:
- apiGroups: ["", "cluster.ray.io"]
  resources: ["rayclusters", "rayclusters/finalizers", "rayclusters/status", "pods", "pods/exec", "services"]
  verbs: ["get", "watch", "list", "create", "delete", "patch", "update"]
- apiGroups: [""]
  resources: [events]
  verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ray-operator-rolebinding
subjects:
- kind: ServiceAccount
  name: ray-operator-serviceaccount
roleRef:
  kind: Role
  name: ray-operator-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.ray.io/component: operator
  template:
    metadata:
      labels:
        cluster.ray.io/component: operator
    spec:
      serviceAccountName: ray-operator-serviceaccount
      containers:
      - name: ray
        imagePullPolicy: Always
        image: {{ .Values.operatorImage }}
        command: ["ray-operator"]
        env:
        - name: RAY_OPERATOR_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AUTOSCALER_MAX_NUM_FAILURES
          value: "inf"
        resources:
          requests:
            cpu: 1
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            memory: 2Gi
            cpu: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mlflow
      operation: monitoring
  template:
    metadata:
      labels:
        component: mlflow
        operation: monitoring
    spec:
      serviceAccountName: ray-operator-serviceaccount
      containers:
      - name: mlflow-server
        imagePullPolicy: IfNotPresent
        image: guidebooks/mlflow
        env:
        - name: MLFLOW_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 1
            memory: 2Gi
            #ephemeral-storage: 1Gi
          limits:
            memory: 4Gi
            cpu: 2
        ports:
          - name: http
            containerPort: 9080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        volumeMounts:
        - mountPath: /mnt/mlflow-disk
          name: mlflow-disk
      volumes:
      - name: mlflow-disk
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
spec:
  selector:
    component: mlflow
    operation: monitoring
  ports:
  - name: mlflow
    protocol: TCP
    port: 9080
    targetPort: http
{{- end }}
